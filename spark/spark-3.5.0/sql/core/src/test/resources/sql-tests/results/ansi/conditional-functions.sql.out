-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TABLE conditional_t USING PARQUET AS SELECT c1, c2 FROM VALUES(1d, 0),(2d, 1),(null, 1),(CAST('NaN' AS DOUBLE), 0) AS t(c1, c2)
-- !query schema
struct<>
-- !query output



-- !query
SELECT nanvl(c2, c1/c2 + c1/c2) FROM conditional_t
-- !query schema
struct<nanvl(c2, ((c1 / c2) + (c1 / c2))):double>
-- !query output
0.0
0.0
1.0
1.0


-- !query
SELECT nanvl(c2, 1/0) FROM conditional_t
-- !query schema
struct<nanvl(c2, (1 / 0)):double>
-- !query output
0.0
0.0
1.0
1.0


-- !query
SELECT nanvl(1-0, 1/0) FROM conditional_t
-- !query schema
struct<nanvl((1 - 0), (1 / 0)):double>
-- !query output
1.0
1.0
1.0
1.0


-- !query
SELECT if(c2 >= 0, 1-0, 1/0) from conditional_t
-- !query schema
struct<(IF((c2 >= 0), (1 - 0), (1 / 0))):double>
-- !query output
1.0
1.0
1.0
1.0


-- !query
SELECT if(1 == 1, 1, 1/0)
-- !query schema
struct<(IF((1 = 1), 1, (1 / 0))):double>
-- !query output
1.0


-- !query
SELECT if(1 != 1, 1/0, 1)
-- !query schema
struct<(IF((NOT (1 = 1)), (1 / 0), 1)):double>
-- !query output
1.0


-- !query
SELECT coalesce(c2, 1/0) from conditional_t
-- !query schema
struct<coalesce(c2, (1 / 0)):double>
-- !query output
0.0
0.0
1.0
1.0


-- !query
SELECT coalesce(1, 1/0)
-- !query schema
struct<coalesce(1, (1 / 0)):double>
-- !query output
1.0


-- !query
SELECT coalesce(null, 1, 1/0)
-- !query schema
struct<coalesce(NULL, 1, (1 / 0)):double>
-- !query output
1.0


-- !query
SELECT case when c2 >= 0 then 1 else 1/0 end from conditional_t
-- !query schema
struct<CASE WHEN (c2 >= 0) THEN 1 ELSE (1 / 0) END:double>
-- !query output
1.0
1.0
1.0
1.0


-- !query
SELECT case when 1 < 2 then 1 else 1/0 end
-- !query schema
struct<CASE WHEN (1 < 2) THEN 1 ELSE (1 / 0) END:double>
-- !query output
1.0


-- !query
SELECT case when 1 > 2 then 1/0 else 1 end
-- !query schema
struct<CASE WHEN (1 > 2) THEN (1 / 0) ELSE 1 END:double>
-- !query output
1.0


-- !query
DROP TABLE conditional_t
-- !query schema
struct<>
-- !query output

